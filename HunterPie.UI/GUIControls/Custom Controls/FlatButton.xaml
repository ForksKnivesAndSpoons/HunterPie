<UserControl x:Name="btn" x:Class="HunterPie.GUIControls.Custom_Controls.FlatButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:HunterPie.GUIControls.Custom_Controls"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance customControls:FlatButton, IsDesignTimeCreatable=False}">
    <Grid>

        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, ElementName=Button}" Value="True">
                        <Setter Property="Cursor" Value="Hand"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsEnabled, ElementName=Button}" Value="False">
                        <Setter Property="Cursor" Value="No"></Setter>
                        <Setter Property="Opacity" Value="0.5"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Button HorizontalAlignment="Center"
                x:Name="Button"
                Padding="5,1" FontFamily="Roboto" FontWeight="Bold" FontSize="16"
                Foreground="{StaticResource GENERIC_BUTTON_FOREGROUND}"
                Command="{Binding Path=Command}"
                CommandParameter="{Binding Path=CommandParameter, ElementName=btn}"
                DataContext="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" OverridesDefaultStyle="True">
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Image x:Name="btnIcon"
                           Source="{Binding Path=Icon}"
                           MaxHeight="20" MaxWidth="20" VerticalAlignment="Center" Margin="0,0,5,0">
                        <Image.Resources>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Text}" Value="{x:Null}">
                                        <Setter Property="Margin" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                    <TextBlock Text="{Binding Path=Text}" VerticalAlignment="Center"/>
                </StackPanel>
            </Button.Content>

            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver}" Value="True" />
                                            <Condition Binding="{Binding IsEnabled, ElementName=Button}" Value="True" />
                                        </MultiDataTrigger.Conditions>

                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard Storyboard.TargetProperty="Opacity">
                                                    <DoubleAnimation To="0.6" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard Storyboard.TargetProperty="Opacity">
                                                    <DoubleAnimation To="1" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>


</UserControl>
