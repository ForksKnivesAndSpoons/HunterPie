<UserControl x:Class="HunterPie.GUIControls.SearchBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:HunterPie.GUIControls.Custom_Controls;assembly=HunterPie.UI"
             xmlns:converters="clr-namespace:HunterPie.UI.Infrastructure.Converters;assembly=HunterPie.UI"
             mc:Ignorable="d"
             Name="SearchBarControl"
             d:DataContext="{d:DesignInstance customControls:FlatButton, IsDesignTimeCreatable=False}"
             d:DesignHeight="40" d:DesignWidth="300">
    <Grid>
        <Grid.Resources>
            <Style TargetType="customControls:FlatButton">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSearchBarActive, ElementName=SearchBarControl}" Value="True">
                        <Setter Property="Text" Value="{x:Null}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSearchBarActive, ElementName=SearchBarControl}" Value="False">
                        <Setter Property="Text" Value="Search"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <customControls:FlatButton
            HorizontalAlignment="Left"
            Icon="{StaticResource ICON_SEARCH}"
            IsButtonEnabled="{Binding ElementName=SearchBarControl, Path=IsSearchBarActive}"
            Command="{Binding ToggleSearchCommand, ElementName=SearchBarControl}">
        </customControls:FlatButton>

        <Grid Margin="35, 0, 0,0"
              ClipToBounds="True">
            <TextBox x:Name="SearchQueryTextBox" TextWrapping="NoWrap" Background="{x:Null}" Foreground="{StaticResource CONSOLE_LOGO_PRIMARY}"
                     BorderBrush="#FFABADB3" BorderThickness="0,0,0,1"
                     Text="{Binding SearchQuery, ElementName=SearchBarControl, UpdateSourceTrigger=PropertyChanged}"
                     FontFamily="Roboto" FontSize="16"
                     Margin="0,7,0, 7"
                     Padding="0,0,15,0"
                     Width="200"
                     CaretBrush="{StaticResource BUTTON_CLOSEWINDOW_BACKGROUND}"
                     VerticalContentAlignment="Center" HorizontalAlignment="Stretch">
                <TextBox.InputBindings>
                    <KeyBinding Key="Escape" Command="{Binding CancelCommand, ElementName=SearchBarControl}" />
                </TextBox.InputBindings>
            </TextBox>
            <customControls:FlatButton Text="✕" HorizontalAlignment="Right"
                                       Command="{Binding CancelCommand, ElementName=SearchBarControl}"
                                       Visibility="{Binding SearchQuery, ElementName=SearchBarControl,
                                            TargetNullValue=Collapsed,
                                            Converter={converters:StringPresenceToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />

            <Grid.Resources>

                <Style TargetType="TextBox">
                    <Setter Property="CaretBrush" Value="{StaticResource BUTTON_CLOSEWINDOW_BACKGROUND}"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSearchBarActive, ElementName=SearchBarControl}" Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="Grid">
                    <!-- Set width in style to be able to animate it-->
                    <Setter Property="Width" Value="0" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSearchBarActive, ElementName=SearchBarControl}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="50" To="200" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="200" To="0" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
        </Grid>
    </Grid>
</UserControl>
