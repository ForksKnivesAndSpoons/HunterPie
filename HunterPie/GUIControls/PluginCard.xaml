<UserControl x:Class="HunterPie.GUIControls.PluginCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:HunterPie.GUIControls.Custom_Controls;assembly=HunterPie.UI"
             xmlns:converters="clr-namespace:HunterPie.UI.Infrastructure.Converters;assembly=HunterPie.UI"
             xmlns:plugins="clr-namespace:HunterPie.Plugins"
             xmlns:strings="clr-namespace:HunterPie.Infrastructure.Strings;assembly=HunterPie.UI"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance plugins:IPluginViewModel, IsDesignTimeCreatable=False}">
    <UserControl.LayoutTransform>
        <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
    </UserControl.LayoutTransform>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MaxWidth="50">
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="False">
                                <Setter Property="MaxWidth" Value="25"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="True">
                                <Setter Property="MaxWidth" Value="50"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>

            <ColumnDefinition Width="*" MinWidth="150" />

            <ColumnDefinition Width="Auto">
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="False">
                                <Setter Property="MaxWidth" Value="0"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <!--title & description-->
            <RowDefinition Height="Auto"/>

            <!--subtext-->
            <RowDefinition Height="Auto" />

            <!--extended buttons-->
            <RowDefinition Height="Auto">
                <RowDefinition.Style>
                    <Style TargetType="RowDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="False">
                                <Setter Property="Height" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
        </Grid.RowDefinitions>

        <!-- image -->
        <Grid Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Image Panel.ZIndex="1" Source="{StaticResource ICON_PLUGIN}"
                   Visibility="{Binding HasImage, Converter={converters:BooleanToVisibilityConverter FalseValue=Visible, TrueValue=Collapsed}}"
                   Width="50" Height="25"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Image}"
                   IsHitTestVisible="False">

                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="False">
                                <Setter Property="MaxHeight" Value="25"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" Value="True">
                                <Setter Property="MaxHeight" Value="50"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>

        <!-- name, description -->
        <StackPanel Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Top">
            <!-- header-->
            <TextBlock TextWrapping="Wrap" FontSize="16" FontFamily="Roboto, Segoe UI" FontWeight="Medium" Foreground="{StaticResource GENERIC_BUTTON_FOREGROUND}" Text="{Binding Name}" />

            <!-- description-->
            <TextBlock TextWrapping="Wrap" FontSize="13" FontFamily="Roboto, Segoe UI" Foreground="{StaticResource GENERIC_BUTTON_FOREGROUND}" Text="{Binding Description}"
                       Visibility="{Binding IsExpanded,
                            Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed, TrueValue=Visible},
                            RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"/>
        </StackPanel>

        <!-- subtext-->
        <WrapPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Margin="5,0,0,0"  VerticalAlignment="Top" Orientation="Horizontal">
            <WrapPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource GENERIC_SUBTEXT_FOREGROUND}" />
                    <Setter Property="FontWeight" Value="Medium" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="FontFamily" Value="Roboto, Segoe UI" />
                </Style>
            </WrapPanel.Resources>

            <StackPanel Orientation="Horizontal" ToolTip="{Binding LastUpdateLong}"
                        Visibility="{Binding LastUpdateShort, Converter={converters:StringPresenceToVisibilityConverter IfHasValue=Visible}, TargetNullValue=Collapsed}">
                <Image Source="{StaticResource ICON_CALENDAR}"  VerticalAlignment="Top" Width="10" Height="10" Margin="0,3,4,0"/>

                <TextBlock TextWrapping="Wrap" Text="{Binding LastUpdateShort}"/>
                <TextBlock Text=" | "/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Image Source="{StaticResource ICON_DOWNLOAD_GRAY}" VerticalAlignment="Top" Width="10" Height="10" Margin="0,4,2,0" />

                <TextBlock TextWrapping="Wrap" Text="{Binding SubText}"/>
            </StackPanel>

        </WrapPanel>

        <!-- buttons -->
        <StackPanel Grid.Column="2" Grid.RowSpan="1" Orientation="Horizontal" Margin="0,0,5,0" Visibility="{Binding IsExpanded,
                Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed},
                RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}">

            <!--remove-->
            <customControls:FlatButton Icon="{StaticResource ICON_REMOVE}" Width="30"
                                       Visibility="{Binding CanDelete, Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed}}"
                                       ToolTip="{strings:GetString MESSAGE_PLUGIN_DELETE}"
                                       Command="{Binding DeleteCommand}"/>

            <!--restore-->
            <customControls:FlatButton Icon="{StaticResource ICON_UNDO}" Width="30"
                                       Visibility="{Binding CanRestore, Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed}}"
                                       ToolTip="{strings:GetString MESSAGE_PLUGIN_RESTORE}"
                                       Command="{Binding RestoreCommand}"/>

            <!--download-->
            <customControls:FlatButton Icon="{StaticResource ICON_DOWNLOAD}" Width="30"
                                       Visibility="{Binding CanInstall, Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed}}"
                                       Command="{Binding DownloadCommand}">
                <customControls:FlatButton.Resources>
                    <Style TargetType="customControls:FlatButton">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsVersionOk}" Value="False">
                                <Setter Property="ToolTip" Value="{strings:GetString MESSAGE_PLUGIN_INCOMPATIBLE_VERSION}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsVersionOk}" Value="True">
                                <Setter Property="ToolTip" Value="{strings:GetString MESSAGE_PLUGIN_INSTALL}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </customControls:FlatButton.Resources>
            </customControls:FlatButton>

            <!--busy-->
            <Grid Width="30" Height="30"
                  Margin="0,0,0,0"
                  Visibility="{Binding IsBusy, Converter={converters:BooleanToVisibilityConverter TrueValue=Visible, FalseValue=Collapsed}}">
                <customControls:BusyIndicator Height="17" Width="17"
                                              HorizontalAlignment="Center"
                                              Visibility="{Binding IsBusy, Converter={converters:BooleanToVisibilityConverter TrueValue=Visible, FalseValue=Collapsed}}" />
            </Grid>

            <!-- warning -->
            <customControls:FlatButton Icon="{StaticResource ICON_WARN}" Width="30"
                                       ToolTip="{strings:GetString MESSAGE_PLUGIN_FAILED}"
                                       Visibility="{Binding IsFailed, Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed}}"/>


            <!--enable-->
            <customControls:Switcher IsEnabled="{Binding IsEnabled}"
                                     Margin="0,0,0,2"
                                     ToggleCommand="{Binding ToggleCommand}"
                                     Visibility="{Binding CanToggle, Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed}}"
                                     Width="53" HorizontalAlignment="Right" VerticalAlignment="Center"
                                     DockPanel.Dock="Right" />
        </StackPanel>

        <!--extended members-->
        <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Orientation="Vertical" Margin="0,0,0,12" Visibility="{Binding Actions.Count, Converter={converters:LengthToVisibilityConverter WhenEmpty=Collapsed, WhenValues=Visible}}">

            <!--top line-->
            <Rectangle Fill="#ff777777" HorizontalAlignment="Stretch" Height="1" Margin="0,5,0,0" VerticalAlignment="Top" Visibility="{Binding IsExpanded,
                Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed},
                RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"/>

            <!--buttons-->
            <ItemsControl Margin="0,5,10,0" Visibility="{Binding IsExpanded,
                Converter={converters:BooleanToVisibilityConverter FalseValue=Collapsed},
                RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                          ItemsSource="{Binding Actions}"
                          HorizontalContentAlignment="Center" HorizontalAlignment="Stretch">
                <ItemsControl.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontWeight" Value="Normal"></Setter>
                        <Setter Property="FontSize" Value="14"></Setter>
                    </Style>
                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <customControls:AlignableWrapPanel HorizontalContentAlignment="Center">
                            <customControls:AlignableWrapPanel.LayoutTransform>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"></ScaleTransform>
                            </customControls:AlignableWrapPanel.LayoutTransform>
                        </customControls:AlignableWrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="plugins:PluginActionViewModel">
                        <customControls:FlatButton Text="{Binding Name}"
                                                   IconBinding="{Binding Icon}"
                                                   Command="{Binding Command}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </StackPanel>

        <!--bottom line-->
        <Grid Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Margin="0,20,0,-3" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Column="0" Fill="{StaticResource GENERIC_SUBTEXT_FOREGROUND}" Height="1" VerticalAlignment="Center" />

            <Button Grid.Column="1" BorderBrush="Transparent" Background="Transparent" Template="{DynamicResource ButtonStyle}" Padding="0" VerticalAlignment="Bottom" Margin="-1,0,-1,-1" x:Name="CollapseButton"
                    Command="{Binding ToggleModeCommand, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                    >
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Style>
                    </Grid.Style>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="1,-1,0,0"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=IsExpanded}" Value="True">
                                        <Setter Property="Text" Value="⯅"/>
                                        <Setter Property="Margin" Value="1,0,0,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=IsExpanded}" Value="False">
                                        <Setter Property="Text" Value="▼"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource GENERIC_BUTTON_FOREGROUND}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource GENERIC_SUBTEXT_FOREGROUND}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Button>

            <Rectangle Grid.Column="2" Fill="{StaticResource GENERIC_SUBTEXT_FOREGROUND}" Height="1" VerticalAlignment="Center" />

        </Grid>
    </Grid>
</UserControl>
